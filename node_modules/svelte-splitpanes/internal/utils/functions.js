/**
 * Generate a callback that is safe to be called even if `callbackObjectGetter()` is nullish on that moment.
 *
 * In the case of the object is nullish, invoking the callback will do nothing.
 */
const carefullCallbackGenerator = (callbackObjectGetter, callbackName) => (value) => {
    const callbackObject = callbackObjectGetter();
    if (callbackObject != null) {
        // @ts-expect-error it's safe to pass this value, only because of TS reasons it's not accepted
        callbackObject[callbackName](value);
    }
};
/**
 * This is an object of callbacks that are safe to be called even if `callbackObjectGetter()` is nullish on that moment.
 *
 * In the case of the object is nullish, invoking the callbacks will do nothing.
 */
export const carefullCallbackObject = (callbackObjectGetter, callbackNames) => Object.fromEntries(callbackNames.map((cb) => [cb, carefullCallbackGenerator(callbackObjectGetter, cb)]));
