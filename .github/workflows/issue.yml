name: Add New Paper From Issue

on:
  issues:
    types: [labeled]
  

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    if: ${{ github.event.label.name == 'New Paper' }}
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Inline python step
        run: |
          import os 
          import json
          import urllib
          def readJson(path) :
            with open(path) as json_file:
              data = json.load(json_file)
              data['data'].append(${{ github.event.issue.body }})
              return data
          path = '${{ github.workspace }}/src/data/survey-data.json'
          newJson = readJson(path)
          with open(path, 'w') as outfile:
            outfile.write(json.dumps(newJson, indent=4))
        shell: python
        
      - name: Check for Valid JSON
        # You may pin to the exact commit or the version.
        # uses: johnstonmatt/is-valid-json-action@c79f2a62342bfe74e5afa2f636eb92ff631416a8
        uses: johnstonmatt/is-valid-json-action@v.1.2.1
        with:
          # path to JSON file to attempt to parse
          path-to-file: ${{ github.workspace }}/src/data/survey-data.json
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5.0.2
        with:
          delete-branch: true
          commit-message: 'New Paper Request: ${{ fromJSON(github.event.issue.body).ShortTitle}}'
          branch: NewPaperRequest${{fromJSON(github.event.issue.body).ShortTitle}}
          labels: New Paper
          reviewers: dsaffo
          title: 'New Paper Request: ${{ fromJSON(github.event.issue.body).ShortTitle}}'
          body: |
            # New Paper Request
            
            ### Meta Data
            - Short Title: ${{ fromJSON(github.event.issue.body).shortTitle }}
            - Title: ${{ fromJSON(github.event.issue.body).title }}
            - Authors: ${{ fromJSON(github.event.issue.body).authors }}
            - Year: ${{ fromJSON(github.event.issue.body).year }}
            - Bibtex: ${{ fromJSON(github.event.issue.body).bibtex }}

            ### Codes
            - Opportunity: ${{ toJSON(fromJSON(github.event.issue.body).Opportunity) }}
            - Contribution: ${{ toJSON(fromJSON(github.event.issue.body)['Contribution Type']) }}
            - Data Domain: ${{ toJSON(fromJSON(github.event.issue.body)['Data Domain']) }}
            - Dataset Types: ${{ toJSON(fromJSON(github.event.issue.body)['Dataset Types']) }}
            - Dataset Generation: ${{ toJSON(fromJSON(github.event.issue.body)['Dataset Generation']) }}
            - Presentation: ${{ toJSON(fromJSON(github.event.issue.body).Presentation) }}
            - Device: ${{ toJSON(fromJSON(github.event.issue.body).Device) }}
            - Input: ${{ toJSON(fromJSON(github.event.issue.body).Input) }}
            - Environment: ${{ toJSON(fromJSON(github.event.issue.body).Environment) }}
            - Space: ${{ toJSON(fromJSON(github.event.issue.body).Space) }}
            - Embodiment: ${{ toJSON(fromJSON(github.event.issue.body).Embodiment) }}
            - Collaboration: ${{ toJSON(fromJSON(github.event.issue.body).Collaboration) }}
            - Visualization Types: ${{ toJSON(fromJSON(github.event.issue.body).Visualization) }}
            - Abstract or Natural: ${{ toJSON(fromJSON(github.event.issue.body)['Abstract/Natural']) }}
            - 2D or 3D: ${{ toJSON(fromJSON(github.event.issue.body)['2D or 3D']) }}
            - Position: ${{ toJSON(fromJSON(github.event.issue.body).Position) }}
            - Scale: ${{ toJSON(fromJSON(github.event.issue.body).Scale) }}
            - Manipulation: ${{ toJSON(fromJSON(github.event.issue.body).Manipulate) }}
            - Interaction: ${{ toJSON(fromJSON(github.event.issue.body).Interaction) }}

            ### Raw JSON
            ${{ toJSON(github.event.issue.body) }}
           
          
            
            
           
            
            

            
          
        
